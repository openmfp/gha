name: pipeline
on:
  workflow_call:
    inputs:
      imageTagName:
        required: true
        type: string
      useTask:
        required: false
        type: boolean
        default: false
      coverageThreasholdFile:
        required: false
        type: number
        default: 80
      coverageThreasholdPackage:
        required: false
        type: number
        default: 80
      coverageThreasholdTotal:
        required: false
        type: number
        default: 95
      useLocalCoverageConfig:
        required: false
        type: boolean
        default: false
      release_branch:
        required: false
        type: string
        default: 'main'
    outputs:
      version:
        description: "The created Version"
        value: ${{ jobs.createVersion.outputs.version }}
  workflow_dispatch:
    inputs:
      imageTagName:
        required: true
        type: string
      useTask:
        required: false
        type: boolean
        default: false
      coverageThreasholdFile:
        required: false
        type: number
        default: 80
      coverageThreasholdPackage:
        required: false
        type: number
        default: 80
      coverageThreasholdTotal:
        required: false
        type: number
        default: 95
      useLocalCoverageConfig:
        required: false
        type: boolean
        default: false
      release_branch:
        required: false
        type: string
        default: 'main'

jobs:
  createVersion:
    uses: ./.github/workflows/job-create-version.yml
    secrets: inherit
  
  debugRepositoryName:
    runs-on: ubuntu-latest
    steps:
      - name: Print repository name
        run: echo "Repository name ${{ github.event.repository.name }}"

  # lint:
  #   uses: ./.github/workflows/job-golang-lint.yml
  #   with:
  #     useTask: ${{ inputs.useTask }}

  # testSource:
  #   uses: ./.github/workflows/job-golang-test-source.yml
  #   with:
  #     useTask: ${{ inputs.useTask }}
  #     useLocalCoverageConfig: ${{ inputs.useLocalCoverageConfig }}
  #     coverageThreasholdFile: ${{ inputs.coverageThreasholdFile }}
  #     coverageThreasholdPackage: ${{ inputs.coverageThreasholdPackage }}
  #     coverageThreasholdTotal: ${{ inputs.coverageThreasholdTotal }}

  # dockerBuildAndPush:
  #   needs: [createVersion]
  #   uses: ./.github/workflows/job-docker-build-push.yml
  #   with:
  #     imageTagName: ${{ inputs.imageTagName }}
  #     version: ${{ needs.createVersion.outputs.version }}
  #     release_branch: ${{ inputs.release_branch }}
  #   secrets: inherit

  # updateVersion:
  #   needs: [createVersion]
  #   uses: ./.github/workflows/job-chart-version-update.yml
  #   secrets: inherit
  #   with:
  #     appVersion: ${{ needs.createVersion.outputs.version }}
  #     chart: ${{ github.event.repository.name }}