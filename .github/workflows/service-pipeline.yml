name: Pipeline
on:
  workflow_call:
    inputs:
      imageTagName:
        required: true
        type: string
      chartFolder:
        required: false
        type: string
        default: 'chart'
      additionalTestFilesCommand:
        required: false
        type: string
        default: '-f chart/test-values.yaml'
    outputs:
      version:
        description: "The created Version"
        value: ${{ jobs.createVersion.outputs.version }}

jobs:
  # Creates a new semver to be used in the following workflow steps
  createVersion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get Latest Version
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: true
          initial_version: 0.0.0
          with_initial_version: true
      - name: Get New Version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: minor
    outputs:
      version: ${{ steps.bump-semver.outputs.new_version }}

  # Validates the helm chart (lint/unittest)
  validateChart:
    uses: ./.github/workflows/chart-validate.yml
    with:
      chartFolder: ${{ inputs.chartFolder }}
      additionalTestFilesCommand: ${{ inputs.additionalTestFilesCommand }}
    secrets: inherit

  # Builds the docker container and pushes it to the registry in case of main branch
  dockerBuildAndPush:
    runs-on: ubuntu-latest
    needs: [createVersion]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ inputs.imageTagName }}:${{ needs.createVersion.outputs.version }}

  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [dockerBuildAndPush,validateChart,createVersion]
    steps:
      - uses: actions/checkout@v3
      - name: Setup yq@latest
        run: |
          if ! command -v yq &>/dev/null
          then
            mkdir -p /home/runner/.local/bin
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /home/runner/.local/bin/yq &&\
              chmod +x /home/runner/.local/bin/yq
          fi
      - name: Update Image Tag
        run: |
          yq e -i '.version = "${{ needs.createVersion.outputs.version }}"' ${{ inputs.chartFolder }}/Chart.yaml
          yq e -i '.image.tag = "${{ needs.createVersion.outputs.version }}"' ${{ inputs.chartFolder }}/values.yaml
      - name: Push Helm chart
        uses: bsord/helm-push@v4.1.0
        with:
          useOCIRegistry: true
          username: ${{ github.actor }}
          access-token: ${{ secrets.GITHUB_TOKEN }}
          registry-url:  oci://ghcr.io/${{ inputs.imageTagName }}/helm
          chart-folder: ${{ inputs.chartFolder }}
      # Without actions-ecosystem-action-get-latest-tag, actions-ecosystem-action-push-tag runs into an error, needs more investigation why
      # https://github.com/actions-ecosystem/action-push-tag/issues/10
      - uses: actions-ecosystem/action-get-latest-tag@v1
      - name: Publish GH Tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ needs.createVersion.outputs.version }}
          message: '${{ needs.createVersion.outputs.version }}'

  