name: Golang Test Source
on:
  workflow_call:
    inputs:
      useTask:
        required: false
        type: boolean
        default: false
      coverageThreasholdFile:
        type: number
      coverageThresholdPackage:
        type: number
      coverageThreasholdTotal:
        type: number
      useLocalCoverageConfig:
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: kcp-dev/kcp
          ref: main
          path: kcp
      - name: Run build script
        working-directory: kcp
        run: |
          IGNORE_GO_VERSION=1  make build
          cp ./bin/kcp ../bin/kcp
      - name: Install Task
        uses: arduino/setup-task@v2
        if: ${{ inputs.useTask }}
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Go
        if: ${{ inputs.useTask == false }}
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
      - name: Test task
        if: ${{ inputs.useTask == true }}
        run: task cover
      - name: Install Code Coverage
        run: go install github.com/vladopajic/go-test-coverage/v2@latest
      - name: Check Test Coverage
        run: go-test-coverage --threshold-file ${{ inputs. coverageThreasholdFile }} --threshold-package ${{ inputs. coverageThresholdPackage }} --threshold-total ${{ inputs. coverageThreasholdTotal }} --profile cover.out
        if: ${{ inputs.useLocalCoverageConfig == false }}
      - name: Check Test Coverage with Config
        run: go-test-coverage --threshold-file ${{ inputs. coverageThreasholdFile }} --threshold-package ${{ inputs. coverageThresholdPackage }} --threshold-total ${{ inputs. coverageThreasholdTotal }} --profile cover.out --config ./.testcoverage.yml
        if: ${{ inputs.useLocalCoverageConfig == true }}