name: Golang Test Source
on:
  workflow_call:
    inputs:
      useTask:
        required: false
        type: boolean
        default: false
      coverageThreasholdFile:
        type: number
      coverageThreasholdPackage:
        type: number
      coverageThreasholdTotal:
        type: number
      useLocalCoverageConfig:
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Install Task
        uses: arduino/setup-task@v2
        if: ${{ inputs.useTask }}
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Test Go
        if: ${{ inputs.useTask == false }}
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
      - name: Test task
        if: ${{ inputs.useTask == true }}
        run: task cover
      - name: Check Test Coverage
        uses: vladopajic/go-test-coverage@v2
        if: ${{ inputs.useLocalCoverageConfig == false }}
        with:
          profile: cover.out
          # local-prefix: github.com/org/project
          threshold-file: ${{ inputs. coverageThreasholdFile }}
          threshold-package: ${{ inputs. coverageThreasholdPackage }}
          threshold-total: ${{ inputs. coverageThreasholdTotal }}
      - name: Check Test Coverage with Config
        uses: vladopajic/go-test-coverage@v2
        if: ${{ inputs.useLocalCoverageConfig == true }}
        with:
          profile: cover.out
          config: ./.testcoverage.yml
          # local-prefix: github.com/org/project
          threshold-file: ${{ inputs. coverageThreasholdFile }}
          threshold-package: ${{ inputs. coverageThreasholdPackage }}
          threshold-total: ${{ inputs. coverageThreasholdTotal }}